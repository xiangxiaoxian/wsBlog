<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiang.demo.mapper.ArticleMapper">
    <resultMap id="article" type="com.xiang.demo.entity.Article">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="pubTime" column="pub_time"/>
        <result property="star" column="star"/>
        <result property="reply" column="reply"/>
        <result property="browse" column="browse"/>
        <association property="user" javaType="com.xiang.demo.entity.User">
            <result property="nickName" column="nickName"/>
            <result property="avatar" column="avatar"/>
        </association>
        <association property="sort" javaType="com.xiang.demo.entity.Sort">
            <result property="id" column="sortId"/>
            <result property="sortName" column="sortName"/>
        </association>
        <association property="lable" javaType="com.xiang.demo.entity.Lable">
            <result property="id" column="lableId"/>
            <result property="lableName" column="lableName"/>
        </association>
    </resultMap>
    <!--对浏览记录加1-->
    <update id="upBrowseOne">
        UPDATE article SET browse=browse+1 where id=#{id}
    </update>
    <!--对点赞数加1-->
    <update id="upStarOne">
        UPDATE article SET star=star+1 where id=#{id}
    </update>
    <!--对点赞数减1-->
    <update id="lowStar">
        UPDATE article SET star=star-1 where id=#{id}
    </update>
    <!--对评论数加1-->
    <update id="upCommentsByArticleId">
        UPDATE article SET reply=reply+1 where id=#{articleId}
    </update>
    <!--对评论数减1-->
    <update id="lowCommentsByArticleId">
        UPDATE article SET reply=reply-1 where id=#{articleId}
    </update>
    <!--列表id查询是否有文章-->
    <select id="selectArticleByUserBatchIds" resultType="com.xiang.demo.entity.Article">
        select a.id from article a where deleted = 0 and a.user_id in
        <foreach collection="collection" item="batchIds" open="(" separator="," close=")">
            #{batchIds}
        </foreach>
    </select>
    <!--查询全部文章按条件-->
    <select id="getAllArticlesAndPages" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,u.nick_name as nickName,u.avatar
        from article a
        LEFT JOIN `user` u on a.user_id=u.id
        ${ew.customSqlSegment}
        order by a.pub_time desc
    </select>

    <!--查询单条文章详情-->
    <select id="getArticleByArticleId" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,
        u.nick_name as nickName,u.avatar,
		s.id as sortId,s.sort_name as sortName,
		l.id as lableId,l.lable_name as lableName
        from article a
        LEFT JOIN `user` u on a.user_id=u.id
		LEFT JOIN article_sort ar on ar.article_id=a.id
		LEFT JOIN sort s on s.id=ar.sort_id
		LEFT JOIN article_lable al on al.article_id=a.id
		LEFT JOIN lable l on l.id=al.lable_id
        where a.id=#{id} and a.deleted=0
        ORDER BY a.id
    </select>
    <!--根据用户id查询文章-->
    <select id="getArticleByUserId" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,u.nick_name as nickName,u.avatar
        from article a
        LEFT JOIN `user` u on a.user_id=u.id
        ${ew.customSqlSegment}
        order by a.id desc
    </select>
    <!--查询浏览量前20的文章不分页-->
    <select id="getArticleTop20" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,u.nick_name as nickName,u.avatar
        from article a
        LEFT JOIN `user` u on a.user_id=u.id
        where a.deleted=0
        order by a.browse desc
        limit 20
    </select>
    <!--根据类别id查询当前分类下所有文章并进行分页-->
    <select id="getArticlesBySortIdAndPage" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,u.nick_name as nickName,u.avatar
        FROM article_sort ao
        LEFT JOIN article a on ao.article_id=a.id
        LEFT JOIN `user` u on a.user_id=u.id
        WHERE ao.sort_id=#{id} and a.deleted=0
        ORDER BY ao.sort_id
    </select>
    <!--根据标签id查询当前分类下所有文章并进行分页-->
    <select id="getArticlesByLableIdAndPage" resultMap="article">
        SELECT a.id,a.browse,a.content,a.pub_time,a.reply,a.star,a.title,a.user_id,u.nick_name as nickName,u.avatar
        FROM article_lable al
        LEFT JOIN article a on al.article_id=a.id
        LEFT JOIN `user` u on a.user_id=u.id
        WHERE al.lable_id=#{id} and a.deleted=0
        ORDER BY al.lable_id
    </select>
</mapper>
